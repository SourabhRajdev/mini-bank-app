{
    "sourceFile": "bankSystem.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1747292157482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747292182271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#include \"BankSystem.h\"\n+#include \"bankSystem.h\"\n #include <iostream>\n \n void BankSystem::createAccount(const std::string& name) {\n     if (accounts.find(name) == accounts.end()) {\n"
                },
                {
                    "date": 1747292358540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#include \"bankSystem.h\"\n+#include \"BankSystem.h\"\n #include <iostream>\n \n void BankSystem::createAccount(const std::string& name) {\n     if (accounts.find(name) == accounts.end()) {\n"
                },
                {
                    "date": 1747292418477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,43 @@\n #include \"BankSystem.h\"\n #include <iostream>\n \n-void BankSystem::createAccount(const std::string& name) {\n+using namespace std;\n+\n+void BankSystem::createAccount(const string& name) {\n     if (accounts.find(name) == accounts.end()) {\n         accounts[name] = 0;\n-        std::cout << \"Account created for \" << name << std::endl;\n+        cout << \"Account created for \" << name << endl;\n     } else {\n-        std::cout << \"Account already exists.\\n\";\n+        cout << \"Account already exists.\" << endl;\n     }\n }\n+\n+void BankSystem::deposit(const string& name, int amount) {\n+    if (accounts.find(name) != accounts.end()) {\n+        accounts[name] += amount;\n+        cout << \"Deposited ₹\" << amount << \" to \" << name << \"'s account.\" << endl;\n+    } else {\n+        cout << \"Account not found.\" << endl;\n+    }\n+}\n+\n+void BankSystem::withdraw(const string& name, int amount) {\n+    if (accounts.find(name) != accounts.end()) {\n+        if (accounts[name] >= amount) {\n+            accounts[name] -= amount;\n+            cout << \"Withdrew ₹\" << amount << \" from \" << name << \"'s account.\" << endl;\n+        } else {\n+            cout << \"Insufficient balance.\" << endl;\n+        }\n+    } else {\n+        cout << \"Account not found.\" << endl;\n+    }\n+}\n+\n+void BankSystem::checkBalance(const string& name) {\n+    if (accounts.find(name) != accounts.end()) {\n+        cout << name << \"'s balance: ₹\" << accounts[name] << endl;\n+    } else {\n+        cout << \"Account not found.\" << endl;\n+    }\n+}\n"
                },
                {
                    "date": 1747292537857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,43 +1,41 @@\n-#include \"BankSystem.h\"\n-#include <iostream>\n+while (true) {\n+    cout << \"\\n--- Mini Bank ---\\n\";\n+    cout << \"1. Create Account\\n2. Deposit\\n3. Withdraw\\n4. Check Balance\\n5. Exit\\n\";\n+    cout << \"Enter choice: \";\n+    cin >> choice;\n \n-using namespace std;\n-\n-void BankSystem::createAccount(const string& name) {\n-    if (accounts.find(name) == accounts.end()) {\n-        accounts[name] = 0;\n-        cout << \"Account created for \" << name << endl;\n-    } else {\n-        cout << \"Account already exists.\" << endl;\n+    if (cin.fail()) {\n+        cin.clear(); // Reset cin\n+        cin.ignore(numeric_limits<streamsize>::max(), '\\n'); // Remove bad input\n+        cout << \"Invalid input. Please enter a number.\\n\";\n+        continue;\n     }\n-}\n \n-void BankSystem::deposit(const string& name, int amount) {\n-    if (accounts.find(name) != accounts.end()) {\n-        accounts[name] += amount;\n-        cout << \"Deposited ₹\" << amount << \" to \" << name << \"'s account.\" << endl;\n-    } else {\n-        cout << \"Account not found.\" << endl;\n+    switch (choice) {\n+        case 1:\n+            cout << \"Enter name: \";\n+            cin >> name;\n+            bank.createAccount(name);\n+            break;\n+        case 2:\n+            cout << \"Enter name and amount: \";\n+            cin >> name >> amount;\n+            bank.deposit(name, amount);\n+            break;\n+        case 3:\n+            cout << \"Enter name and amount: \";\n+            cin >> name >> amount;\n+            bank.withdraw(name, amount);\n+            break;\n+        case 4:\n+            cout << \"Enter name: \";\n+            cin >> name;\n+            bank.checkBalance(name);\n+            break;\n+        case 5:\n+            cout << \"Goodbye!\\n\";\n+            return 0;\n+        default:\n+            cout << \"Invalid choice.\\n\";\n     }\n }\n-\n-void BankSystem::withdraw(const string& name, int amount) {\n-    if (accounts.find(name) != accounts.end()) {\n-        if (accounts[name] >= amount) {\n-            accounts[name] -= amount;\n-            cout << \"Withdrew ₹\" << amount << \" from \" << name << \"'s account.\" << endl;\n-        } else {\n-            cout << \"Insufficient balance.\" << endl;\n-        }\n-    } else {\n-        cout << \"Account not found.\" << endl;\n-    }\n-}\n-\n-void BankSystem::checkBalance(const string& name) {\n-    if (accounts.find(name) != accounts.end()) {\n-        cout << name << \"'s balance: ₹\" << accounts[name] << endl;\n-    } else {\n-        cout << \"Account not found.\" << endl;\n-    }\n-}\n"
                },
                {
                    "date": 1747292548763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,43 @@\n-while (true) {\n-    cout << \"\\n--- Mini Bank ---\\n\";\n-    cout << \"1. Create Account\\n2. Deposit\\n3. Withdraw\\n4. Check Balance\\n5. Exit\\n\";\n-    cout << \"Enter choice: \";\n-    cin >> choice;\n+#include \"BankSystem.h\"\n+#include <iostream>\n \n-    if (cin.fail()) {\n-        cin.clear(); // Reset cin\n-        cin.ignore(numeric_limits<streamsize>::max(), '\\n'); // Remove bad input\n-        cout << \"Invalid input. Please enter a number.\\n\";\n-        continue;\n+using namespace std;\n+\n+void BankSystem::createAccount(const string& name) {\n+    if (accounts.find(name) == accounts.end()) {\n+        accounts[name] = 0;\n+        cout << \"Account created for \" << name << endl;\n+    } else {\n+        cout << \"Account already exists.\" << endl;\n     }\n+}\n \n-    switch (choice) {\n-        case 1:\n-            cout << \"Enter name: \";\n-            cin >> name;\n-            bank.createAccount(name);\n-            break;\n-        case 2:\n-            cout << \"Enter name and amount: \";\n-            cin >> name >> amount;\n-            bank.deposit(name, amount);\n-            break;\n-        case 3:\n-            cout << \"Enter name and amount: \";\n-            cin >> name >> amount;\n-            bank.withdraw(name, amount);\n-            break;\n-        case 4:\n-            cout << \"Enter name: \";\n-            cin >> name;\n-            bank.checkBalance(name);\n-            break;\n-        case 5:\n-            cout << \"Goodbye!\\n\";\n-            return 0;\n-        default:\n-            cout << \"Invalid choice.\\n\";\n+void BankSystem::deposit(const string& name, int amount) {\n+    if (accounts.find(name) != accounts.end()) {\n+        accounts[name] += amount;\n+        cout << \"Deposited ₹\" << amount << \" to \" << name << \"'s account.\" << endl;\n+    } else {\n+        cout << \"Account not found.\" << endl;\n     }\n }\n+\n+void BankSystem::withdraw(const string& name, int amount) {\n+    if (accounts.find(name) != accounts.end()) {\n+        if (accounts[name] >= amount) {\n+            accounts[name] -= amount;\n+            cout << \"Withdrew ₹\" << amount << \" from \" << name << \"'s account.\" << endl;\n+        } else {\n+            cout << \"Insufficient balance.\" << endl;\n+        }\n+    } else {\n+        cout << \"Account not found.\" << endl;\n+    }\n+}\n+\n+void BankSystem::checkBalance(const string& name) {\n+    if (accounts.find(name) != accounts.end()) {\n+        cout << name << \"'s balance: ₹\" << accounts[name] << endl;\n+    } else {\n+        cout << \"Account not found.\" << endl;\n+    }\n+}\n"
                },
                {
                    "date": 1747292589760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,15 @@\n #include \"BankSystem.h\"\n #include <iostream>\n \n-using namespace std;\n+using std::cout;\n+using std::endl;\n+using std::string;\n \n void BankSystem::createAccount(const string& name) {\n     if (accounts.find(name) == accounts.end()) {\n         accounts[name] = 0;\n+        transactionLogs[name] = {};\n         cout << \"Account created for \" << name << endl;\n     } else {\n         cout << \"Account already exists.\" << endl;\n     }\n@@ -14,8 +17,9 @@\n \n void BankSystem::deposit(const string& name, int amount) {\n     if (accounts.find(name) != accounts.end()) {\n         accounts[name] += amount;\n+        transactionLogs[name].push_back(\"Deposited ₹\" + std::to_string(amount));\n         cout << \"Deposited ₹\" << amount << \" to \" << name << \"'s account.\" << endl;\n     } else {\n         cout << \"Account not found.\" << endl;\n     }\n@@ -24,8 +28,9 @@\n void BankSystem::withdraw(const string& name, int amount) {\n     if (accounts.find(name) != accounts.end()) {\n         if (accounts[name] >= amount) {\n             accounts[name] -= amount;\n+            transactionLogs[name].push_back(\"Withdrew ₹\" + std::to_string(amount));\n             cout << \"Withdrew ₹\" << amount << \" from \" << name << \"'s account.\" << endl;\n         } else {\n             cout << \"Insufficient balance.\" << endl;\n         }\n@@ -40,4 +45,15 @@\n     } else {\n         cout << \"Account not found.\" << endl;\n     }\n }\n+\n+void BankSystem::printTransactions(const string& name) {\n+    if (transactionLogs.find(name) != transactionLogs.end()) {\n+        cout << \"Transaction history for \" << name << \":\" << endl;\n+        for (const auto& entry : transactionLogs[name]) {\n+            cout << \" - \" << entry << endl;\n+        }\n+    } else {\n+        cout << \"No transactions found or account does not exist.\" << endl;\n+    }\n+}\n"
                }
            ],
            "date": 1747292157482,
            "name": "Commit-0",
            "content": "#include \"BankSystem.h\"\n#include <iostream>\n\nvoid BankSystem::createAccount(const std::string& name) {\n    if (accounts.find(name) == accounts.end()) {\n        accounts[name] = 0;\n        std::cout << \"Account created for \" << name << std::endl;\n    } else {\n        std::cout << \"Account already exists.\\n\";\n    }\n}\n"
        }
    ]
}